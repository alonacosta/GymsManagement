@model IEnumerable<GymManagement.Models.AppointmentData>
@{
    ViewData["Title"] = "GetSessionsFromGym";
    var countryId = ViewData["CountryId"];
    var gymId = ViewData["GymId"];
    bool isClient = Convert.ToBoolean(ViewData["IsClient"]);
    bool istClient = ViewBag.IsClient ?? false;


    // var isClient = ViewData["IsClient"]; 
   
}

<div class="shadow p-5 mb-5 bg-body-tertiary rounded bg-light">
     <div class="row">
        <div class="col-md-6">
            <h2>Classes Map</h2>
        </div>   
        <div class="col-md-6">           
            <div class="input-group mb-3">
                <input type="text" class="form-control" placeholder="Search by class name..." aria-label="Search Class" aria-describedby="button-search" id="searchInput" oninput="filterBySubject()">
            </div>            
         </div>
     </div>   

    <ejs-schedule id="schedule"
        currentView="Month"    
        startHour="08:00"
        endHour="21:00"      
    >
        <e-schedule-eventsettings datasource="Model" enableTooltip=true template="#EventTemplate"></e-schedule-eventsettings>
        <e-schedule-views>       
           <e-schedule-view option="Week"></e-schedule-view>       
       </e-schedule-views>
       <e-schedule-quickinfotemplates header="#headerTemplate" content="#contentTemplate" footer="#footerTemplate">
        </e-schedule-quickinfotemplates>
    </ejs-schedule>

</div>

<style>
    .e-appointment-wrapper {
        background: transparent;
        border: none;
        padding: 0;
        border-radius: 8px;
    }

    .e-schedule .e-vertical-view .e-day-wrapper .e-appointment {
        background: transparent;
        border: none;
        padding: 0;
        border-radius: 8px;
    }

    .e-schedule .template-wrap {
        height: 100%;
        white-space: normal;
        border-radius: 8px;
    }
</style>

<script id="EventTemplate" type="text/x-template">   
    <div class="template-wrap" style="background:${SecondaryColor};">
	    <div class="subject" style="background:{{PrimaryColor}};"> ${Subject} </div>
		<div class="time"> ${getTimeString(StartTime)} - ${ getTimeString(EndTime)} </div>       
    </div>    
</script>

<script id="headerTemplate" type="text/x-template">
    <div>
        ${if (elementType === 'cell')}
        <div class="e-cell-header">
            <div class="e-header-icon-wrapper">
                <button class="e-close" title="Close"></button>
            </div>
        </div>
        ${else}
        <div class="e-event-header">
            <div class="e-header-icon-wrapper">
                <button class="e-close" title="CLOSE"></button>
            </div>
        </div>
        ${/if}
    </div>
</script>

<script id="contentTemplate" type="text/x-template">
    <div>
        ${if (elementType === 'cell')}
        <div class="e-cell-content">          
            <div>
                 <div class="subject" style="background:{{PrimaryColor}}; padding: 4px; color: #fff;">
                    ${Subject}
                 </div>
                 <div class="time" style="padding: 4px;">
                    ${getTimeString(StartTime)} - ${getTimeString(EndTime)}
                 </div>
            </div>           
        </div>
        ${else}
        <div class="e-event-content">
            <div class="e-subject-wrap">
                ${if (Subject)}
                     <div class="subject">${Subject}</div>${/if} 
                ${if (StartTime && EndTime) }
                    <div class="time"> ${getTimeString(StartTime)} - ${getTimeString(EndTime)}</div>
                ${/if}  
                ${if (ImageName && Url)}
                    <div class="image">
                        <img src="${Url}" alt="${ImageName}" />
                    </div>
                    ${/if}
            </div>
        </div>
        ${/if}
    </div>
</script>

<script id="footerTemplate" type="text/x-template">
    <div>
        ${if (elementType === 'cell')}
        <div class="e-cell-footer">
            <button class="e-event-details" title="Extra Details">Extra Details</button>
            <button class="e-event-create" title="Add">Add</button>
        </div>
        ${else}
        <div class="e-event-footer">
            ${if (Id)}
            <button class="e-event-book btn btn-success me-1" title="Book" onclick="redirectToBookSession(@countryId, @gymId, ${Id})" ${StateButton}>Book</button>
            ${/if}
             <button class="btn btn-danger e-cancel" title="Cancel" onclick="closeQuickInfoPopup()">Cancel</button>           
        </div>
        ${/if}
    </div>
</script>

<script type="text/javascript">
    var instance = new ej.base.Internationalization();
    function getTimeString(value) {
        return instance.formatDate(value, { skeleton: 'hm' });
    }

    function closeQuickInfoPopup() {
        var scheduleObj = document.getElementById('schedule').ej2_instances[0]; 
        scheduleObj.closeQuickInfoPopup(); 
    }

    const isClient = @((bool)ViewData["IsClient"] ? "true" : "false");
    console.log("isClient:", isClient);

    function redirectToBookSession(countryId, gymId, appointmentId) {
        console.log("Redirecting with isClient:", isClient);       

        if (isClient) {
            window.location.href = `/GymSessions/BookSession?countryId=${countryId}&gymId=${gymId}&gymSessionId=${appointmentId}`;
        }
        else {
            window.location.href = `/FreeAppointments/TryFreeSession?countryId=${countryId}&gymId=${gymId}&gymSessionId=${appointmentId}`;
        }      
    }

    let allEventBackup = null; // Mova esta variável para fora da função para mantê-la entre chamadas

    function filterBySubject() {
        const searchInput = document.getElementById('searchInput').value.trim().toLowerCase(); 
        const schedule = document.getElementById('schedule').ej2_instances[0]; 
        const allEvents = schedule.eventsData; 

        // Initialises event backup on first run
        if (allEventBackup === null) {
            allEventBackup = allEvents.slice(); // Make a copy of the events for backup
        }

        let filteredEvents; 

        // If the search field is empty, restores all events
        if (searchInput === "") {
            filteredEvents = allEventBackup; 
        } else {
            // Filters events based on the search
            filteredEvents = allEventBackup.filter(event =>
                event.Subject.toLowerCase().includes(searchInput)
            );
        }

        // Updates the calendar with filtered events
        schedule.eventSettings.dataSource = filteredEvents;
        schedule.refresh();
    }

    
</script>


@* <div class="row mt-4">
    @if (Model != null && Model.Any())
    {
        @foreach (var item in Model)
        {

            <div class="card me-3" style="width: 18rem;">
                <img src="@item.Session.ImageFullPath" class="card-img-top" alt="Gym Photo" style="width:100%; height:200px; object-fit:cover;">
                <div class="card-body">
                    <h5 class="card-title">@Html.DisplayFor(modelItem => item.Session.Name)</h5>
                    <h6 class="card-subtitle mb-2 text-body-secondary">@Html.DisplayFor(modelItem => item.StartSession)</h6>
                    <p class="card-text"> @Html.DisplayNameFor(modelItem => item.Duration),  @Html.DisplayFor(modelItem => item.Duration)</p>
                    <p class="card-text"> @Html.DisplayNameFor(modelItem => item.Capacity),  @Html.DisplayFor(modelItem => item.Capacity)</p>
                    @if (this.User.Identity.IsAuthenticated && this.User.IsInRole("Client"))
                    {
                        <a asp-action="BookSession" asp-controller="GymSessions" asp-route-countryId="@countryId" asp-route-gymId="@gymId" asp-route-id="@item.Id" class="card-link btn btn-outline-success w-100">Book</a>
                    }
                    else if (!this.User.Identity.IsAuthenticated)
                    {
                        @* <a asp-action="TryFreeSession" asp-controller="FreeAppointments" asp-route-countryId="@countryId" asp-route-gymId="@gymId" asp-route-id="@item.Id" class="card-link btn btn-outline-success w-100">Try for Free</a> *@
                        @* <a asp-action="TryFreeSession" asp-controller="FreeAppointments" class="card-link btn btn-outline-success w-100">Try for Free</a>
                    }
                </div>
            </div>
        }
    }
    else
    {
        <p>
            There are no sessions available yet!
        </p>
    }
</div> *@ 

